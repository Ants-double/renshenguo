1. 外观类不能添加方法，他只是各个模块的代理，把方法添加到对应的模块上去，代理可以功能增强，但代理只是一个类，而此处是一堆模块
2. 没有面向抽像，通过转换服务提供方来实现简化，能解耦多对多能转化为多对一 一对多
3. 可以增加方法和属性暴露的控制，模块间的和与用户交互的可以区别开来
4. spring中的context 就是这样的一个思想，把配置啊 bean啊，环境啊，之类的统一个容器让我们来使用和操作
5. 例如 公司中的工资核算有很多影响 如考勤 如项目组绩效 如出差报销等

